<?php

/**
 * @file
 * Functions to support theming in the rpgtheme theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\file\Entity\File;
use Drupal\user\Entity\User;
use Drupal\views\Views;
use Drupal\Core\Url;

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function rpgtheme_preprocess_html(array &$variables) {
  $current_path = \Drupal::service('path.current')->getPath();
  if (strpos($current_path, '/rpgc/add/') === 0) {
    $variables['page']['#attached']['html_head'][] = [
      [
        '#tag' => 'meta',
        '#attributes' => [
          'http-equiv' => 'Cache-Control',
          'content' => 'no-cache, no-store, must-revalidate',
        ],
      ],
      'rpgc_cc',
    ];
    $variables['page']['#attached']['html_head'][] = [
      [
        '#tag' => 'meta',
        '#attributes' => [
          'http-equiv' => 'Pragma',
          'content' => 'no-cache',
        ],
      ],
      'rpgc_pr',
    ];
    $variables['page']['#attached']['html_head'][] = [
      [
        '#tag' => 'meta',
        '#attributes' => [
          'http-equiv' => 'Expires',
          'content' => '0',
        ],
      ],
      'rpgc_ex',
    ];
  }
}

/**
 * Implements hook_page_attachments_alter().
 */
function rpgtheme_page_attachments_alter(array &$page) {
  // Tell IE to use latest rendering engine (not to use compatibility mode).
  /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function rpgtheme_preprocess_page(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function rpgtheme_theme_suggestions_page_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function rpgtheme_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  /*$node = $variables['elements']['#node'];

  if ($variables['elements']['#view_mode'] == "full") {

  }*/
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function rpgtheme_preprocess_block(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function rpgtheme_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function rpgtheme_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
  }*/
}

/**
 * Implements hook_preprocess_node().
 */
function rpgtheme_preprocess_node(array &$variables) {
  // Default to turning off byline/submitted.
  //$variables['display_submitted'] = FALSE;
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function rpgtheme_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_form().
 */
function rpgtheme_preprocess_form(array &$variables) {
  //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
 * Implements hook_preprocess_select().
 */
function rpgtheme_preprocess_select(array &$variables) {
  //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
function rpgtheme_preprocess_field(array &$variables, $hook) {
  /*switch ($variables['element']['#field_name']) {
  }*/
}

/**
 * Implements hook_preprocess_details().
 */
function rpgtheme_preprocess_details(array &$variables) {
  /*$variables['attributes']['class'][] = 'details';
  $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function rpgtheme_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function rpgtheme_preprocess_menu_local_task(array &$variables) {
  //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter the enable personal contact form to an individual user's account page.
 *
 * @see \Drupal\user\ProfileForm::form()
 */
function rpgtheme_form_user_form_alter(&$form, FormStateInterface $form_state) {
  // Get fid for terms pdf from theme settings.
  $fid = theme_get_setting('terms.terms_and_conditions_pdf');
  if (!empty($fid)) {
    $file = File::load($fid[0]);
  }
  if (!empty($file)) {
    $terms_url = $file->url();
    $form['field_terms_and_conditions']['widget']['value']['#title'] = 'Tick this box to confirm you have read and agree to the <a href="' . $terms_url . '" target="_blank">Terms and Conditions</a>';
  }

}

/**
 * Implements hook_form_system_theme_settings_alter().
 */
function rpgtheme_form_system_theme_settings_alter(array &$form, FormStateInterface $form_state, $form_id = NULL) {
  // Work-around for a core bug affecting admin themes. See issue #943212.
  if (isset($form_id)) {
    return;
  }

  // Add fieldset for terms and conditions PDF upload.
  $form['terms'] = [
    '#type' => 'fieldset',
    '#title' => t('Terms and Conditions upload'),
    '#collapsed' => FALSE,
    '#collapsible' => FALSE,
    '#weight' => 5,
  ];
  $form['terms']['terms_and_conditions_pdf'] = [
    '#type' => 'managed_file',
    '#title' => t('Terms and Conditions pdf'),
    '#size' => 40,
    '#default_value' => theme_get_setting('terms.terms_and_conditions_pdf'),
    '#attributes' => ['enctype' => 'multipart/form-data'],
    '#description' => t('Upload the terms and conditions pdf file here.'),
    '#upload_location' => 'public://official_files',
    '#upload_validators' => [
      'file_validate_extensions' => ['pdf'],
    ],
  ];

}
